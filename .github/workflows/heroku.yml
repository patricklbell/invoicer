name: CI and CD

on: [push, pull_request]

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  PROD_DATABASE_NAME: 'prodDB'
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  JWT_EXPIRES: '1h'
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  SENDGRID_SENDER: 'patricklachlanbell@gmail.com'
  REDIRECT_RULS: '/docs'

jobs:
  # This job will do a clean installation of node dependencies, cache/restore them, lint, and run tests across different versions of node
  test:
    runs-on: ubuntu-latest

    strategy:
      # Make sure tests aren't writing to database in parallel
      max-parallel: 1
      matrix:
        node-version: [18.x, 16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Linting
        run: npm run lint
      - name: Testing
        run: npm run coverage
      - name: Build
        run: npm run build

  # If tests succeeded and we are on main then the repository will be deploy
  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
        env:
          HD_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          HD_PROD_DATABASE_NAME: 'prodDB'
          HD_JWT_SECRET: ${{ secrets.JWT_SECRET }}
          HD_JWT_EXPIRES: '1h'
          HD_SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          HD_SENDGRID_SENDER: 'patricklachlanbell@gmail.com'
          HD_REDIRECT_RULS: '/docs'
